pipeline {
    agent any

    environment {
        VENV = 'backend_env'
        PYTHON_IMAGE = 'python:3.11-slim' // Docker image with Python
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Cloning repository...'
                git credentialsId: 'github-credentials', url: 'https://github.com/Simacoder/alx-backend-python.git', branch: 'master'
            }
        }

        stage('Run Tests in Docker') {
            steps {
                echo 'Running tests inside Docker container...'
                script {
                    docker.image(PYTHON_IMAGE).inside('-v $WORKSPACE:/workspace') {
                        sh '''
                            cd /workspace/messaging_app
                            python -m venv backend_env
                            . backend_env/bin/activate
                            pip install --upgrade pip
                            pip install -r requirements.txt
                            pip install pytest
                            pytest tests --junitxml=report.xml
                        '''
                    }
                }
            }
        }

        stage('Archive Report') {
            steps {
                echo 'Archiving test report...'
                junit 'messaging_app/report.xml'
            }
        }
    }

    post {
        always {
            echo 'Archiving artifacts regardless of build result...'
            archiveArtifacts artifacts: 'messaging_app/report.xml', allowEmptyArchive: true
        }
    }
}
