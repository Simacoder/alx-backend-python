#!/bin/bash
# kubctl-0x02 - Blue/Green deploy & verify
# Author: Simanga Mchunu

set -euo pipefail

NAMESPACE="default"
BLUE_DEPLOY="django-messaging-blue"
GREEN_DEPLOY="django-messaging-green"
CANARY_INGRESS="django-messaging-ingress-canary"
HOSTNAME="django.local"

echo "=== Applying blue/green deployments and services ==="
kubectl apply -n "$NAMESPACE" -f blue_deployment.yaml
kubectl apply -n "$NAMESPACE" -f green_deployment.yaml
kubectl apply -n "$NAMESPACE" -f kubeservice.yaml

echo "=== Waiting for BLUE to be ready ==="
kubectl rollout status deployment/"$BLUE_DEPLOY" -n "$NAMESPACE"

echo "=== Waiting for GREEN to be ready ==="
kubectl rollout status deployment/"$GREEN_DEPLOY" -n "$NAMESPACE"

echo "=== Current pods ==="
kubectl get pods -n "$NAMESPACE" -l app=django-messaging -o wide

echo "=== Checking GREEN pod logs for errors ==="
GREEN_PODS=$(kubectl get pods -n "$NAMESPACE" -l app=django-messaging,version=green -o jsonpath='{.items[*].metadata.name}')
if [[ -z "$GREEN_PODS" ]]; then
  echo "No green pods found."
  exit 1
fi

for p in $GREEN_PODS; do
  echo "--- Logs for $p ---"
  # Print last 200 lines to quickly surface errors without flooding the terminal
  kubectl logs -n "$NAMESPACE" "$p" --tail=200 || true
done

# Optional progressive traffic shift: pass --promote to step canary weights 20% -> 50% -> 100%
if [[ "${1:-}" == "--promote" ]]; then
  echo "=== Gradually shifting traffic to GREEN via canary weights ==="
  for W in 20 50 100; do
    echo "Setting canary weight to ${W}%"
    kubectl annotate ingress "$CANARY_INGRESS" -n "$NAMESPACE" \
      nginx.ingress.kubernetes.io/canary-weight="${W}" --overwrite

    # Small wait to let routes update
    sleep 10

    echo "Ingresses:"
    kubectl get ingress -n "$NAMESPACE"
  done

  echo "=== 100% to GREEN; you can now switch stable route if desired ==="
  echo "To point stable traffic to green permanently, edit the stable Ingress backend service to 'django-messaging-green-svc'."
fi

echo "=== Done. Test at: http://${HOSTNAME}/api/ ==="
